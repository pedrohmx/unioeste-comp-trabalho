PROG -> STMTS
STMTS -> STMTS STMT
STMTS -> ''
STMT -> DECL_STMT ;
STMT -> ATTRIB_STMT ;
STMT -> COMMAND ;
STMT -> FLOW
DECL_STMT -> type id DECL_END
DECL_END -> attrib EXPR
DECL_END -> ''
ATTRIB_STMT -> id ATTRIB_END                                                    
ATTRIB_END -> ATTRIB EXPR                                                               
ATTRIB_END -> ATTRIB_OP EXPR
EXPR -> BOOL_EXPR
EXPR -> ARITH_EXPR
BOOL_EXPR -> VAR BOOL_OP VAR
BOOL_EXPR -> not VAR
BOOL_EXPR -> REL_EXPR
ARITH_EXPR -> VAR ARITH_OP_SUM VAR
ARITH_EXPR -> VAR ARITH_OP_MUL VAR
REL_EXPR -> VAR REL_OP VAR
FLOW -> IF_STMT
FLOW -> WHILE_STMT
FLOW -> FOR_STMT
IF_STMT -> if ( BOOL_EXPR ) { STMTS } ELSE_STMT                          
ELSE_STMT -> else { STMTS }                                                                 
ELSE_STMT -> ''
WHILE_STMT -> while ( BOOL_EXPR ) { STMTS }                                   
FOR_STMT -> for ( DECL_STMT ; BOOL_EXPR ; ATTRIB ) { STMTS }
COMMAND -> read id                                                                        
COMMAND -> write VAR WCHAIN
WCHAIN -> , VAR WCHAIN
WCHAIN -> ''
VAR -> id
VAR -> LITERAL
LITERAL -> "literal_int"                                                                                 
LITERAL -> "literal_float"
LITERAL -> "literal_bool"
LITERAL -> "literal_str"
